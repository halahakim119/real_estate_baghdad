import '../../domain/entities/post_entity.dart';
import 'location_model.dart';

class PostModel extends PostEntity {
  const PostModel({
    required String userId,
    required String postId,
    required int likesNum,
    required DateTime dateAdded,
    required String link,
    required List<String> images,
    required LocationModel location,
    required String overview,
    required String furnishingStatus,
    required String postType,
    required String categoryType,
    required String titleDeedType,
    required int bathroomNum,
    required int bedroomNum,
    required double size,
    required double price,
    required bool garden,
    required bool garage,
    required bool swimmingpool,
    required bool electricity24H,
    required bool water24H,
    required bool installedAC,
    required bool dualTitleDeed,
  }) : super(
          userId: userId,
          postId: postId,
          likesNum: likesNum,
          dateAdded: dateAdded,
          link: link,
          images: images,
          location: location,
          overview: overview,
          furnishingStatus: furnishingStatus,
          postType: postType,
          categoryType: categoryType,
          titleDeedType: titleDeedType,
          bathroomNum: bathroomNum,
          bedroomNum: bedroomNum,
          size: size,
          price: price,
          garden: garden,
          garage: garage,
          swimmingpool: swimmingpool,
          electricity24H: electricity24H,
          water24H: water24H,
          installedAC: installedAC,
          dualTitleDeed: dualTitleDeed,
        );

  factory PostModel.fromJson(Map<String, dynamic> json) {
    return PostModel(
      userId: json['userId'] as String,
      postId: json['postId'] as String,
      likesNum: json['likesNum'] as int,
      dateAdded: DateTime.parse(json['dateAdded'] as String),
      link: json['link'] as String,
      images:
          (json['images'] as List<dynamic>).map((e) => e as String).toList(),
      location: LocationModel.fromJson(json['location']),
      overview: json['overview'] as String,
      furnishingStatus: json['furnishingStatus'] as String,
      postType: json['postType'] as String,
      categoryType: json['categoryType'] as String,
      titleDeedType: json['titleDeedType'] as String,
      bathroomNum: json['bathroomNum'] as int,
      bedroomNum: json['bedroomNum'] as int,
      size: json['size'] as double,
      price: json['price'] as double,
      garden: json['garden'] as bool,
      garage: json['garage'] as bool,
      swimmingpool: json['swimmingpool'] as bool,
      electricity24H: json['electricity24H'] as bool,
      water24H: json['water24H'] as bool,
      installedAC: json['installedAC'] as bool,
      dualTitleDeed: json['dualTitleDeed'] as bool,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'userId': userId,
      'postId': postId,
      'likesNum': likesNum,
      'dateAdded': dateAdded.toIso8601String(),
      'link': link,
      'images': images,
      'location': (location as LocationModel).toJson(),
      'overview': overview,
      'furnishingStatus': furnishingStatus,
      'postType': postType,
      'categoryType': categoryType,
      'titleDeedType': titleDeedType,
      'bathroomNum': bathroomNum,
      'bedroomNum': bedroomNum,
      'size': size,
      'price': price,
      'garden': garden,
      'garage': garage,
      'swimmingpool': swimmingpool,
      'electricity24H': electricity24H,
      'water24H': water24H,
      'installedAC': installedAC,
      'dualTitleDeed': dualTitleDeed,
    };
  }
}
